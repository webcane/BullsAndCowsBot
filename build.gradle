/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.11.1/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java'
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'cane.brothers'
version = '0.0.1'
description = 'Bulls&Cows game telegram bot'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/webcane/mastermind")
        credentials {
            username = "webcane"
            password = getEnvVar('GITHUB_TOKEN')
        }
    }
}

dependencies {
    // This dependency is used by the application.
    implementation libs.guava
    // spring boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    // postgresql
    runtimeOnly 'org.postgresql:postgresql'
    // telegram
    implementation 'org.telegram:telegrambots-springboot-longpolling-starter:8.0.0'
    implementation 'org.telegram:telegrambots-client:8.0.0'
    // slf4j implementation
    implementation 'ch.qos.logback:logback-classic:1.4.12'
    // bulls@cows
    implementation 'cane.brothers:mastermind:3.4'
    // either
    implementation 'io.github.jbock-java:either:1.5.2'
    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    // escape chars
    implementation "org.apache.commons:commons-text:1.12.0"
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.10.3')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    manifest {
        attributes(
                'Main-Class': application.mainClass
        )
    }
}

application {
    // Define the main class for the application.
    mainClass = 'cane.brothers.tgbot.App'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

compileJava {
    options.compilerArgs << '-parameters'
}

bootJar {
    archiveFileName = "app.${archiveExtension.get()}"
}

static String getEnvVar(String env_var) {
    return new File('.env').readLines()
            .findAll { it?.trim() && !it.trim().startsWith('#') }
            .collect { it.split('=') }
            .find { it[0] == env_var }[1]
}
